services:
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_ADMIN_ENABLED=true
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - app_net
      - web_net
    labels:
      - traefik.enable=true
      - traefik.docker.network=web_net
      - traefik.http.routers.influxdb.entrypoints=http
      - traefik.http.routers.influxdb.rule=Host(`${INFLUX_SUBDOMAIN}.${DOMAIN_ADDRESS}`)
      - traefik.http.routers.influxdb.middlewares=https-redirect
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.influxdb-secure.entrypoints=https
      - traefik.http.routers.influxdb-secure.rule=Host(`${INFLUX_SUBDOMAIN}.${DOMAIN_ADDRESS}`)
      - traefik.http.routers.influxdb-secure.tls=true
      - traefik.http.routers.influxdb-secure.tls.options=default
      - traefik.http.routers.influxdb-secure.tls.certresolver=mycert
      - traefik.http.services.influxdb.loadbalancer.server.port=8086

  app:
    image: node:20
    container_name: typescript-app
    working_dir: /usr/src/app
    volumes:
      - .:/usr/src/app
    command: sh -c "npm install && npm run dev"
    depends_on:
      - influxdb
    networks:
      - app_net

  k6:
    image: grafana/k6:latest
    container_name: k6-runner
    working_dir: /scripts
    volumes:
      - ./tests:/scripts
    depends_on:
      - influxdb
    entrypoint: ["k6"]
    networks:
      - app_net

volumes:
  influxdb_data:

networks:
  app_net:
    external: false
    name: app_net
  web_net:
    external: true
    name: web_net
